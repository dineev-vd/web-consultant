client-build:
  stage: build
  tags: 
    - build
  only:
    - master
  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - echo "Building $CI_REGISTRY/hse/webrtchse1/isconsultant-client:$CI_COMMIT_SHORT_SHA"
    - docker build -f Dockerfile.client -t $CI_REGISTRY/hse/webrtchse1/isconsultant-client:$CI_COMMIT_SHORT_SHA .
    - docker push $CI_REGISTRY/hse/webrtchse1/isconsultant-client:$CI_COMMIT_SHORT_SHA

server-build:
  stage: build
  tags: 
    - build
  only:
    - master
  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - echo "Building $CI_REGISTRY/hse/webrtchse1/isconsultant:$CI_COMMIT_SHORT_SHA"
    - docker build -f Dockerfile.server -t $CI_REGISTRY/hse/webrtchse1/isconsultant:$CI_COMMIT_SHORT_SHA .
    - docker push $CI_REGISTRY/hse/webrtchse1/isconsultant:$CI_COMMIT_SHORT_SHA

server-deploy:
  stage: deploy
  only:
    - master
  tags: 
    - deploy-prod
  script: 
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker rm -f isconfultant
    - docker run -d \
      --env-file=/home/falcon/production.env \
      -p 8080:8080 \
      -p 8081:8081 \
      --pull always \
      --name isc-server \
      --restart always \
      $CI_REGISTRY/hse/webrtchse1:$CI_COMMIT_SHORT_SHA/isconsultant:$CI_COMMIT_SHORT_SHA

client-deploy:
  stage: deploy
  only: 
    - master
  tags: 
    - deploy-prod
  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker rm -f isconsultant-client
    - docker run -d
      --env-file=/home/falcon/production.env \
      -p 8090:8080 \
      --pull always \
      --name isc-client \
      --restart always \
      $CI_REGISTRY/hse/webrtchse1:$CI_COMMIT_SHORT_SHA/isconsultant-client:$CI_COMMIT_SHORT_SHA



