stages:
  - cleanup
  - build
  - deploy

cleanup:
  stage: cleanup
  tags: 
    - build
  variables:
    GIT_STRATEGY: none
  only:
    refs:
      - master
    changes:
      - common/**/*
      - client/**/*
      - tsconfig.json
      - Dockerfile.client
      - types/**/*
      - server/**/*
      - admin/**/*
      - Dockerfile.server
  script:
    - docker system prune -f


client-build:
  stage: build
  tags: 
    - build
  only:
    refs:
      - master
    changes:
      - common/**/*
      - client/**/*
      - tsconfig.json
      - Dockerfile.client

  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - echo "Building $CI_REGISTRY/hse/webrtchse1/isconsultant-client:$CI_COMMIT_SHORT_SHA"
    - docker build -f Dockerfile.client -t $CI_REGISTRY/hse/webrtchse1/isconsultant-client:$CI_COMMIT_SHORT_SHA .
    - docker push $CI_REGISTRY/hse/webrtchse1/isconsultant-client:$CI_COMMIT_SHORT_SHA

server-build:
  stage: build
  tags: 
    - build
  only:
    refs:
      - master
    changes:
      - types/**/*
      - server/**/*
      - common/**/*
      - admin/**/*
      - Dockerfile.server
      - tsconfig.json
  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - echo "Building $CI_REGISTRY/hse/webrtchse1/isconsultant:$CI_COMMIT_SHORT_SHA"
    - docker build -f Dockerfile.server -t $CI_REGISTRY/hse/webrtchse1/isconsultant:$CI_COMMIT_SHORT_SHA .
    - docker push $CI_REGISTRY/hse/webrtchse1/isconsultant:$CI_COMMIT_SHORT_SHA

server-deploy:
  needs: ["server-build"]
  stage: deploy
  only:
    refs:
      - master
    changes:
      - types/**/*
      - server/**/*
      - common/**/*
      - admin/**/*
      - Dockerfile.server
      - tsconfig.json
  tags: 
    - deploy-prod
  script: 
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker rm -f isc-server
    - docker run -d --env-file="/home/falcon/production.env" -p 8080:8080 -p 8081:8081 --pull always --name isc-server --restart always "$CI_REGISTRY/hse/webrtchse1/isconsultant:$CI_COMMIT_SHORT_SHA"

client-deploy:
  needs: ["client-build"]
  stage: deploy
  only:
    refs:
      - master
    changes:
      - common/**/*
      - client/**/*
      - tsconfig.json
      - Dockerfile.client
  tags: 
    - deploy-prod
  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker rm -f isc-client
    - docker run -d --env-file="/home/falcon/production.env" -p 8090:8080 --pull always --name isc-client --restart always "$CI_REGISTRY/hse/webrtchse1/isconsultant-client:$CI_COMMIT_SHORT_SHA"



